{"version":3,"sources":["components/Header.js","components/shared/ButtonWithText.js","components/shared/OverlaidSearchButton.js","utils/utils.js","components/shared/FilterChip.js","components/shared/ImageCard.js","components/shared/ErrorMessage.js","components/shared/LayoutBox.js","components/shared/MUIDatePicker.js","components/shared/SearchModal.js","components/shared/LoadingSpinner.js","components/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","flexDirection","justifyContent","Header","classes","Fragment","AppBar","position","Toolbar","Typography","variant","color","noWrap","textTransform","ButtonWithText","props","Button","disableRipple","children","OverlaidSearchButton","className","elevation","formatDate","date","Date","toISOString","substr","FilterChip","searchFilter","resetFilter","searchDate","console","log","Grid","id","Chip","label","onDelete","ImageCard","useState","expanded","setExpanded","liked","setLiked","imageStatus","setImageStatus","item","copyright","explanation","media_type","thumbnail_url","hdurl","title","url","Card","CardContent","style","display","href","target","rel","src","alt","onLoad","onError","gutterBottom","component","Divider","light","CardActions","onClick","IconButton","Collapse","in","timeout","collapsedSize","unmountOnExit","ErrorMessage","LayoutBox","items","isFetchingMore","fetchMoreError","getMorePhotos","Box","paddingX","length","map","d","i","disabled","MUIDatePicker","selectedDate","setSelectedDate","setNewFilterDate","utils","DateFnsUtils","container","DatePicker","value","onChange","onAccept","placeholder","format","SearchModal","modalOpen","handleModal","setSearchFilter","setItems","searchByDate","newFilterDate","Modal","open","onClose","LoadingSpinner","alignContent","height","CircularProgress","Layout","error","setError","setFetchMoreError","isLoaded","setIsLoaded","setIsFetchingMore","setModalOpen","getPhotos","fetch","process","then","res","json","result","hasOwnProperty","useEffect","window","addEventListener","document","getElementById","getBoundingClientRect","top","classList","remove","add","val","newResultArray","formattedSelectedDate","arrayResult","push","App","Container","disableGutters","mb","maxWidth","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9a9c224.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n});\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar position=\"relative\">\n        <Toolbar\n          classes={{\n            root: classes.root,\n          }}\n        >\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Spacestagram\n          </Typography>\n          <AccountCircleIcon />\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    textTransform: \"capitalize\",\n  },\n});\n\nconst ButtonWithText = (props) => {\n  const classes = useStyles();\n  return (\n    <Button\n      {...props}\n      classes={{\n        root: classes.root,\n      }}\n      disableRipple\n    >\n      {props.children}\n    </Button>\n  );\n};\nexport default ButtonWithText;\n","import React from \"react\";\nimport ButtonWithText from \"./ButtonWithText\";\nimport ImageSearchIcon from \"@material-ui/icons/ImageSearch\";\n\nconst OverlaidSearchButton = (props) => {\n  return (\n    <ButtonWithText\n      {...props}\n      variant=\"contained\"\n      color=\"secondary\"\n      className=\"overlaid_search_btn\"\n      elevation={4}\n    >\n      <ImageSearchIcon className=\"search_text_icon\" />\n      <span className=\"search_text\"> Search </span>\n    </ButtonWithText>\n  );\n};\n\nexport default OverlaidSearchButton;\n","export const getDate = () => {\n  const date = new Date();\n  const [day, year] = [date.getDate(), date.getFullYear()];\n  const month = new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(\n    date\n  );\n  return `${month} ${day}, ${year}`;\n};\n\nexport const formatDate = (date) => {\n  const newDate = new Date(date);\n  return newDate.toISOString().substr(0, 10);\n};\n","import React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { formatDate } from \"../../utils/utils\";\n\nconst FilterChip = ({ searchFilter, resetFilter }) => {\n  const searchDate = formatDate(searchFilter);\n  console.log(\"searchDate\", searchDate);\n  const handleDelete = () => {\n    resetFilter();\n  };\n  return (\n    <React.Fragment>\n      <Grid className=\"filter_wrapper\" id=\"filterWrapperId\">\n        <Chip label={searchDate} variant=\"outlined\" onDelete={handleDelete} />\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default FilterChip;\n","import React, { useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonWithText from \"./ButtonWithText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\n\nconst ImageCard = (props) => {\n  const [expanded, setExpanded] = useState(false);\n  const [liked, setLiked] = useState(false);\n  const [imageStatus, setImageStatus] = useState(\"loading\");\n  const {\n    copyright,\n    date,\n    explanation,\n    media_type,\n    thumbnail_url,\n    hdurl,\n    title,\n    url,\n  } = props.item;\n\n  const handleCollapse = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleImageLoaded = () => {\n    setImageStatus(\"loaded\");\n  };\n  const handleImageError = () => {\n    setImageStatus(\"error\");\n  };\n  return (\n    <React.Fragment>\n      <Card className=\"image_card\" elevation={4}>\n        <CardContent>\n          <Grid\n            className=\"image_card_img_container\"\n            style={\n              imageStatus === \"loading\"\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            <a\n              href={media_type === \"image\" ? hdurl : url}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <img\n                src={media_type === \"image\" ? url : thumbnail_url}\n                alt={title}\n                className=\"image_card_img\"\n                onLoad={handleImageLoaded}\n                onError={handleImageError}\n              />\n              {media_type !== \"image\" && (\n                <div className=\"dead_icon\">\n                  <PlayCircleOutlineIcon />\n                </div>\n              )}\n            </a>\n          </Grid>\n          {/* FIX UP STYLE HERE */}\n          <Grid\n            style={\n              imageStatus === \"loading\"\n                ? { display: \"block\" }\n                : { display: \"none\" }\n            }\n          >\n            Loading . . .\n          </Grid>\n          {/* FIX UP STYLE ABOVE */}\n          <Typography\n            gutterBottom\n            variant=\"body1\"\n            component=\"h3\"\n            className=\"card_image_title\"\n          >\n            {title}\n          </Typography>\n          <Typography variant=\"caption\" component=\"p\">\n            {copyright ? copyright + \",\" : \"\"} {date ? date : \"\"}\n          </Typography>\n        </CardContent>\n        <Divider light />\n        <CardActions>\n          <ButtonWithText onClick={handleCollapse}>\n            Description {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          </ButtonWithText>\n          <IconButton\n            onClick={() => {\n              setLiked(!liked);\n            }}\n            className={`image_card_like_btn ${liked ? \"liked\" : \"not_liked\"}`}\n          >\n            {liked ? <FavoriteIcon color=\"error\" /> : <FavoriteBorderIcon />}\n          </IconButton>\n        </CardActions>\n        <Grid>\n          <Collapse\n            in={expanded}\n            timeout=\"auto\"\n            collapsedSize=\"0px\"\n            unmountOnExit\n          >\n            <CardContent className=\"collapsed_content\">\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {explanation}\n              </Typography>\n            </CardContent>\n          </Collapse>\n        </Grid>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default ImageCard;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst ErrorMessage = () => {\n  return (\n    <Grid>\n      <p>Error: There was an error fetching data.</p>\n    </Grid>\n  );\n};\nexport default ErrorMessage;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport ImageCard from \"./ImageCard\";\nimport ButtonWithText from \"./ButtonWithText\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst LayoutBox = ({\n  searchFilter,\n  items,\n  isFetchingMore,\n  fetchMoreError,\n  getMorePhotos,\n}) => {\n  return (\n    <React.Fragment>\n      <Box\n        paddingX={2}\n        className={searchFilter !== null ? \"filteredLayout\" : \"layout_box\"}\n      >\n        <div>\n          {items &&\n            items.length > 0 &&\n            items.map((d, i) => {\n              return <ImageCard key={`img_${i}`} item={d} />;\n            })}\n          {items && items.length === 0 && (\n            <div>Sorry, no items were available.</div>\n          )}\n        </div>\n        {searchFilter === null && items.length > 0 && (\n          <ButtonWithText\n            variant=\"contained\"\n            disabled={isFetchingMore === true}\n            onClick={() => {\n              getMorePhotos();\n            }}\n            className=\"load_more_btn\"\n          >\n            Load More\n          </ButtonWithText>\n        )}\n        {fetchMoreError === true && <ErrorMessage />}\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default LayoutBox;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\n\nconst MUIDatePicker = ({ selectedDate, setSelectedDate, setNewFilterDate }) => {\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid\n        container\n        justifyContent=\"space-around\"\n        className=\"date_picker_wrapper\"\n      >\n        <DatePicker\n          value={selectedDate}\n          onChange={handleDateChange}\n          onAccept={(date) => {\n            setNewFilterDate(date);\n          }}\n          placeholder=\"Date\"\n          format=\"MM/dd/yyyy\"\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n};\nexport default MUIDatePicker;\n","import React, { useState } from \"react\";\n\nimport Modal from \"@material-ui/core/Modal\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MUIDatePicker from \"./MUIDatePicker\";\nimport ButtonWithText from \"./ButtonWithText\";\n\nconst SearchModal = (props) => {\n  const {\n    modalOpen,\n    handleModal,\n    selectedDate,\n    setSelectedDate,\n    setSearchFilter,\n    setItems,\n    searchByDate,\n  } = props;\n  const [newFilterDate, setNewFilterDate] = useState(null);\n\n  return (\n    <Modal\n      open={modalOpen}\n      onClose={() => {\n        handleModal(false);\n      }}\n      aria-labelledby=\"search-modal\"\n      aria-describedby=\"search-by-date-modal\"\n      id=\"searchModal\"\n    >\n      <Grid container className=\"modal_body\">\n        <IconButton\n          onClick={() => {\n            handleModal(false);\n          }}\n          className=\"close_btn\"\n        >\n          <CloseIcon />\n        </IconButton>\n        <Grid item>\n          <Typography variant=\"body1\" component=\"p\">\n            Search for\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\">\n            NASA's Astronomy Picture of the Day\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\" gutterBottom>\n            with the date below.\n          </Typography>\n          <MUIDatePicker\n            selectedDate={selectedDate}\n            setSelectedDate={setSelectedDate}\n            setNewFilterDate={setNewFilterDate}\n          />\n          <ButtonWithText\n            onClick={() => {\n              handleModal(false);\n              setSearchFilter(newFilterDate);\n              setItems([]);\n              searchByDate(selectedDate);\n            }}\n            className=\"search_btn\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Search\n          </ButtonWithText>\n        </Grid>\n      </Grid>\n    </Modal>\n  );\n};\n\nexport default SearchModal;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst LoadingSpinner = () => {\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      alignContent=\"center\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        height: \"300px\",\n      }}\n    >\n      <CircularProgress color=\"primary\" />\n    </Grid>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useEffect, useState } from \"react\";\nimport OverlaidSearchButton from \"./shared/OverlaidSearchButton\";\nimport FilterChip from \"./shared/FilterChip\";\nimport LayoutBox from \"./shared/LayoutBox\";\nimport { formatDate } from \"../utils/utils\";\nimport SearchModal from \"./shared/SearchModal\";\nimport LoadingSpinner from \"./shared/LoadingSpinner\";\nimport ErrorMessage from \"./shared/ErrorMessage\";\n\nconst Layout = () => {\n  const [error, setError] = useState(null);\n  const [fetchMoreError, setFetchMoreError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isFetchingMore, setIsFetchingMore] = useState(false);\n  const [items, setItems] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [searchFilter, setSearchFilter] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  const getPhotos = () => {\n    fetch(\n      `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_KEY}&thumbs=true&count=25`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.hasOwnProperty(\"error\")) {\n            setError(true);\n            setIsLoaded(true);\n            return;\n          }\n          setIsLoaded(true);\n          setItems(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(true);\n        }\n      );\n  };\n  const getMorePhotos = () => {\n    setIsFetchingMore(true);\n    fetch(\n      `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_KEY}&thumbs=true&count=25`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.hasOwnProperty(\"error\")) {\n            setIsFetchingMore(false);\n            setFetchMoreError(true);\n            return;\n          }\n          let newResultArray = [...items, ...result];\n          setItems(newResultArray);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setFetchMoreError(true);\n        }\n      );\n  };\n  const fixedScrollListener = () => {\n    window.addEventListener(\"scroll\", () => {\n      const topBorder = document\n        .getElementById(\"appRoot\")\n        .getBoundingClientRect().top;\n      topBorder >= -55\n        ? document.getElementById(\"filterWrapperId\") &&\n          document.getElementById(\"filterWrapperId\").classList.remove(\"fixed\")\n        : document.getElementById(\"filterWrapperId\") &&\n          document.getElementById(\"filterWrapperId\").classList.add(\"fixed\");\n    });\n  };\n  useEffect(() => {\n    getPhotos();\n    fixedScrollListener();\n  }, []);\n\n  const searchByDate = (searchDate) => {\n    setIsLoaded(false);\n    let formattedSelectedDate = formatDate(searchDate);\n    fetch(\n      `https://api.nasa.gov/planetary/apod?api_key=${process.env.REACT_APP_NASA_KEY}&thumbs=true&date=${formattedSelectedDate}`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result.hasOwnProperty(\"error\")) {\n            setError(true);\n            setIsLoaded(true);\n            return;\n          }\n          let arrayResult = [];\n          arrayResult.push(result);\n          setItems(arrayResult);\n          setIsLoaded(true);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(true);\n        }\n      );\n  };\n\n  const resetFilter = () => {\n    setSearchFilter(null);\n    setItems([]);\n    setIsLoaded(false);\n    getPhotos();\n  };\n  const handleModal = (val) => {\n    setModalOpen(val);\n  };\n\n  if (error) {\n    return <ErrorMessage />;\n  } else if (!isLoaded) {\n    return <LoadingSpinner />;\n  } else {\n    return (\n      <React.Fragment>\n        {searchFilter !== null && error === null && (\n          <FilterChip\n            searchFilter={searchFilter}\n            resetFilter={resetFilter}\n            formatDate={formatDate}\n          />\n        )}\n\n        <LayoutBox\n          items={items}\n          searchFilter={searchFilter}\n          isFetchingMore={isFetchingMore}\n          fetchMoreError={fetchMoreError}\n          getMorePhotos={getMorePhotos}\n        />\n        <OverlaidSearchButton\n          onClick={() => {\n            handleModal(true);\n          }}\n        />\n        <SearchModal\n          modalOpen={modalOpen}\n          handleModal={handleModal}\n          selectedDate={selectedDate}\n          setSelectedDate={setSelectedDate}\n          setSearchFilter={setSearchFilter}\n          setItems={setItems}\n          searchByDate={searchByDate}\n        />\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Header from \"./components/Header\";\nimport Layout from \"./components/Layout\";\nimport \"./assets/styles/styles.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"App\" id=\"appRoot\">\n      <Container disableGutters mb={2} maxWidth=\"xl\" className=\"main\">\n        <CssBaseline />\n        <Header />\n        <Layout />\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}